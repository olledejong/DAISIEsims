// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// DAISIE_nonoceanic_spec_cpp
Rcpp::List DAISIE_nonoceanic_spec_cpp(int prob_samp, int prob_nonend, int mainland_n);
RcppExport SEXP _DAISIEsims_DAISIE_nonoceanic_spec_cpp(SEXP prob_sampSEXP, SEXP prob_nonendSEXP, SEXP mainland_nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type prob_samp(prob_sampSEXP);
    Rcpp::traits::input_parameter< int >::type prob_nonend(prob_nonendSEXP);
    Rcpp::traits::input_parameter< int >::type mainland_n(mainland_nSEXP);
    rcpp_result_gen = Rcpp::wrap(DAISIE_nonoceanic_spec_cpp(prob_samp, prob_nonend, mainland_n));
    return rcpp_result_gen;
END_RCPP
}
// update_rates_cpp
Rcpp::List update_rates_cpp(int timeval, int total_time, double gam, double laa, double lac, double mu, Rcpp::List hyper_pars, Rcpp::List area_pars, double K, int num_spec, int num_immigrants, int mainland_n, int peak, int island_ontogeny, int sea_level);
RcppExport SEXP _DAISIEsims_update_rates_cpp(SEXP timevalSEXP, SEXP total_timeSEXP, SEXP gamSEXP, SEXP laaSEXP, SEXP lacSEXP, SEXP muSEXP, SEXP hyper_parsSEXP, SEXP area_parsSEXP, SEXP KSEXP, SEXP num_specSEXP, SEXP num_immigrantsSEXP, SEXP mainland_nSEXP, SEXP peakSEXP, SEXP island_ontogenySEXP, SEXP sea_levelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type timeval(timevalSEXP);
    Rcpp::traits::input_parameter< int >::type total_time(total_timeSEXP);
    Rcpp::traits::input_parameter< double >::type gam(gamSEXP);
    Rcpp::traits::input_parameter< double >::type laa(laaSEXP);
    Rcpp::traits::input_parameter< double >::type lac(lacSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type hyper_pars(hyper_parsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type area_pars(area_parsSEXP);
    Rcpp::traits::input_parameter< double >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type num_spec(num_specSEXP);
    Rcpp::traits::input_parameter< int >::type num_immigrants(num_immigrantsSEXP);
    Rcpp::traits::input_parameter< int >::type mainland_n(mainland_nSEXP);
    Rcpp::traits::input_parameter< int >::type peak(peakSEXP);
    Rcpp::traits::input_parameter< int >::type island_ontogeny(island_ontogenySEXP);
    Rcpp::traits::input_parameter< int >::type sea_level(sea_levelSEXP);
    rcpp_result_gen = Rcpp::wrap(update_rates_cpp(timeval, total_time, gam, laa, lac, mu, hyper_pars, area_pars, K, num_spec, num_immigrants, mainland_n, peak, island_ontogeny, sea_level));
    return rcpp_result_gen;
END_RCPP
}
// DAISIE_sample_event_cr_cpp
int DAISIE_sample_event_cr_cpp(double immig_rate, double ext_rate, double ana_rate, double clado_rate);
RcppExport SEXP _DAISIEsims_DAISIE_sample_event_cr_cpp(SEXP immig_rateSEXP, SEXP ext_rateSEXP, SEXP ana_rateSEXP, SEXP clado_rateSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type immig_rate(immig_rateSEXP);
    Rcpp::traits::input_parameter< double >::type ext_rate(ext_rateSEXP);
    Rcpp::traits::input_parameter< double >::type ana_rate(ana_rateSEXP);
    Rcpp::traits::input_parameter< double >::type clado_rate(clado_rateSEXP);
    rcpp_result_gen = Rcpp::wrap(DAISIE_sample_event_cr_cpp(immig_rate, ext_rate, ana_rate, clado_rate));
    return rcpp_result_gen;
END_RCPP
}
// DAISIE_spec_tables_cpp
Rcpp::List DAISIE_spec_tables_cpp(int total_time, int timeval, Rcpp::List nonoceanic_sample, int maxspecID);
RcppExport SEXP _DAISIEsims_DAISIE_spec_tables_cpp(SEXP total_timeSEXP, SEXP timevalSEXP, SEXP nonoceanic_sampleSEXP, SEXP maxspecIDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type total_time(total_timeSEXP);
    Rcpp::traits::input_parameter< int >::type timeval(timevalSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type nonoceanic_sample(nonoceanic_sampleSEXP);
    Rcpp::traits::input_parameter< int >::type maxspecID(maxspecIDSEXP);
    rcpp_result_gen = Rcpp::wrap(DAISIE_spec_tables_cpp(total_time, timeval, nonoceanic_sample, maxspecID));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DAISIEsims_DAISIE_nonoceanic_spec_cpp", (DL_FUNC) &_DAISIEsims_DAISIE_nonoceanic_spec_cpp, 3},
    {"_DAISIEsims_update_rates_cpp", (DL_FUNC) &_DAISIEsims_update_rates_cpp, 15},
    {"_DAISIEsims_DAISIE_sample_event_cr_cpp", (DL_FUNC) &_DAISIEsims_DAISIE_sample_event_cr_cpp, 4},
    {"_DAISIEsims_DAISIE_spec_tables_cpp", (DL_FUNC) &_DAISIEsims_DAISIE_spec_tables_cpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_DAISIEsims(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
